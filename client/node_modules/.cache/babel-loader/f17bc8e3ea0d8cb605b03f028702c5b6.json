{"ast":null,"code":"var _jsxFileName = \"/Users/ossian/Git/myHomePage/client/src/components/wineOrganizer/wineIndex.js\";\nimport React, { useEffect, useState } from 'react';\nimport './wine.css';\nimport WineGrid from './components/wineGrid/WineGrid';\nimport AddWine from './addWine/AddWine';\n\nconst WineIndex = () => {\n  const [cardArr, setCardArr] = useState();\n  const [title, setTitle] = useState(null);\n  const [displayForm, setDisplayForm] = useState('none');\n  const [position, setPosition] = useState(null);\n  const [updateOnPost, setUpdateOnPost] = useState(false);\n\n  const getBackend = async () => {\n    const title = await fetch('http://localhost:5000').then(res => res.json());\n    setTitle(title);\n  };\n\n  const getWines = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/wines', {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await response.json();\n      const wineArr = resData.wineArr;\n      setCardArr(wineArr);\n    } catch (err) {\n      console.error(err, 'getWines error');\n    }\n  };\n\n  useEffect(() => {\n    getBackend();\n    getWines();\n    console.log('updated!');\n  }, [title, updateOnPost]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wineIndex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(AddWine, {\n    setCardArr: setCardArr,\n    setDisplayForm: setDisplayForm,\n    displayForm: displayForm,\n    position: position,\n    updateOnPost: updateOnPost,\n    setUpdateOnPost: setUpdateOnPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(WineGrid, {\n    cardArr: cardArr,\n    setCardArr: setCardArr,\n    setDisplayForm: setDisplayForm,\n    displayForm: displayForm,\n    setPosition: setPosition,\n    updateOnPost: updateOnPost,\n    setUpdateOnPost: setUpdateOnPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default WineIndex;","map":{"version":3,"sources":["/Users/ossian/Git/myHomePage/client/src/components/wineOrganizer/wineIndex.js"],"names":["React","useEffect","useState","WineGrid","AddWine","WineIndex","cardArr","setCardArr","title","setTitle","displayForm","setDisplayForm","position","setPosition","updateOnPost","setUpdateOnPost","getBackend","fetch","then","res","json","getWines","response","headers","resData","wineArr","err","console","error","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,MAAD,CAA9C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,KAAD,CAAhD;;AAGA,QAAMc,UAAU,GAAG,YAAY;AAC7B,UAAMR,KAAK,GAAG,MAAMS,KAAK,CAAC,uBAAD,CAAL,CACjBC,IADiB,CACZC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADK,CAApB;AAEAX,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAJD;;AAMA,QAAMa,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAML,KAAK,CAAC,6BAAD,EAAgC;AAC1DM,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AADiD,OAAhC,CAA5B;AAGA,YAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACF,IAAT,EAAtB;AACA,YAAMK,OAAO,GAAGD,OAAO,CAACC,OAAxB;AACAlB,MAAAA,UAAU,CAACkB,OAAD,CAAV;AACD,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd,EAAmB,gBAAnB;AACD;AACF,GAXD;;AAaAzB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,UAAU;AACVK,IAAAA,QAAQ;AACRM,IAAAA,OAAO,CAACE,GAAR,CAAY,UAAZ;AACD,GAJQ,EAIN,CAACrB,KAAD,EAAQM,YAAR,CAJM,CAAT;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBN,KAAxB,CADF,eAEE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAED,UADd;AAEE,IAAA,cAAc,EAAEI,cAFlB;AAGE,IAAA,WAAW,EAAED,WAHf;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAKE,IAAA,YAAY,EAAEE,YALhB;AAME,IAAA,eAAe,EAAEC,eANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAUE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAET,OADX;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,cAAc,EAAEI,cAHlB;AAIE,IAAA,WAAW,EAAED,WAJf;AAKE,IAAA,WAAW,EAAEG,WALf;AAME,IAAA,YAAY,EAAEC,YANhB;AAOE,IAAA,eAAe,EAAEC,eAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAsBD,CAvDD;;AAyDA,eAAeV,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './wine.css';\nimport WineGrid from './components/wineGrid/WineGrid';\nimport AddWine from './addWine/AddWine';\n\nconst WineIndex = () => {\n  const [cardArr, setCardArr] = useState();\n  const [title, setTitle] = useState(null);\n  const [displayForm, setDisplayForm] = useState('none');\n  const [position, setPosition] = useState(null);\n  const [updateOnPost, setUpdateOnPost] = useState(false)\n\n\n  const getBackend = async () => {\n    const title = await fetch('http://localhost:5000')\n      .then(res => res.json());\n    setTitle(title);\n  }\n\n  const getWines = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/wines', {\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const resData = await response.json();\n      const wineArr = resData.wineArr;\n      setCardArr(wineArr);\n    } catch (err) {\n      console.error(err, 'getWines error')\n    }\n  }\n\n  useEffect(() => {\n    getBackend();\n    getWines();\n    console.log('updated!')\n  }, [title, updateOnPost]);\n\n  return (\n    <div className=\"wineIndex\">\n      <h1 className=\"header\">{title}</h1>\n      <AddWine\n        setCardArr={setCardArr}\n        setDisplayForm={setDisplayForm}\n        displayForm={displayForm}\n        position={position}\n        updateOnPost={updateOnPost}\n        setUpdateOnPost={setUpdateOnPost}\n      />\n      <WineGrid\n        cardArr={cardArr}\n        setCardArr={setCardArr}\n        setDisplayForm={setDisplayForm}\n        displayForm={displayForm}\n        setPosition={setPosition}\n        updateOnPost={updateOnPost}\n        setUpdateOnPost={setUpdateOnPost}\n      />\n    </div>\n  );\n}\n\nexport default WineIndex;\n"]},"metadata":{},"sourceType":"module"}